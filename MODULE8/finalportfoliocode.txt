# COPY THIS LINE OF CODE - BEGINNING
class ObjectToProcure:
    def __init__(self, product_name="none", dollar_value_of_product=0, numerical_quantity_of_product=0):
        self.product_name = product_name
        self.dollar_value_of_product = dollar_value_of_product
        self.numerical_quantity_of_product = numerical_quantity_of_product

    def console_log_product_cost(self):
        total_grocery_cart_cost = self.dollar_value_of_product * self.numerical_quantity_of_product
        print(
            f"{self.product_name} {self.numerical_quantity_of_product} @ ${self.dollar_value_of_product} = ${total_grocery_cart_cost}")


def initial_product_to_cart(cart):
    product_name = input("Whats the description of the first Object:\n")
    product_dollar_value = float(input(f"Whats the dollar value of the {product_name}:\n"))
    product_quantity = int(input(f"Whats the quantity of the {product_name}:\n"))
    Object = ObjectToProcure(product_name, product_dollar_value, product_quantity)
    cart.add_product(Object)

    print("\nHERE IS THE TOTAL COST OF THE Object")
    Object.console_log_product_cost()

    total_grocery_cart_cost = cart.get_cost_of_cart()
    print(f"\nTotal: ${total_grocery_cart_cost}")


class GroceryCartAtStore:
    def __init__(self, grocery_shoppers_name="none", todays_shopping_date="September 7, 2024"):
        self.grocery_shoppers_name = grocery_shoppers_name
        self.todays_shopping_date = todays_shopping_date
        self.products_in_shopping_cart = []

    def add_product(self, Object: ObjectToProcure):
        self.products_in_shopping_cart.append(Object)

    def remove_product(self, product_name: str):
        found = False
        for Object in self.products_in_shopping_cart:
            if Object.product_name == product_name:
                self.products_in_shopping_cart.remove(Object)
                found = True
                break
        if not found:
            print("The Object to be Removed, wasn't found in the cart, So nothing was REMOVED.")

    def adjust_Object(self, product_to_modify: ObjectToProcure):
        found = False
        for Object in self.products_in_shopping_cart:
            if Object.product_name == product_to_modify.product_name:
                if product_to_modify.dollar_value_of_product != 0:
                    Object.dollar_value_of_product = product_to_modify.dollar_value_of_product
                if product_to_modify.numerical_quantity_of_product != 0:
                    Object.numerical_quantity_of_product = product_to_modify.numerical_quantity_of_product
                found = True
                break
        if not found:
            print("The Object to be Modified, wasn't found in the cart, So nothing was MODIFIED.")

    def get_num_Objects_in_cart(self) -> int:
        total_quantity = sum(Object.numerical_quantity_of_product for Object in self.products_in_shopping_cart)
        return total_quantity

    def get_cost_of_cart(self) -> float:
        total_grocery_cart_cost = sum(Object.dollar_value_of_product * Object.numerical_quantity_of_product for Object in
                                      self.products_in_shopping_cart)
        return total_grocery_cart_cost

    def total_output(self):
        print(f"{self.grocery_shoppers_name}'s Grocery Cart - {self.todays_shopping_date}")
        if not self.products_in_shopping_cart:
            print("THERE IS NOTHING IN THE Grocery Cart, IT IS EMPTY!")
        else:
            print(f"Total Number of Objects in the Grocery Cart: {self.get_num_Objects_in_cart()}")
            for Object in self.products_in_shopping_cart:
                Object.console_log_product_cost()
            print(f"\nTotal Cost of the Cart: ${self.get_cost_of_cart()}")

    def print_identity(self):
        print(f"{self.grocery_shoppers_name}'s Grocery Cart - {self.todays_shopping_date}")
        print("Object identity")
        for Object in self.products_in_shopping_cart:
            print(f"{Object.product_name}: {Object.dollar_value_of_product}")


def print_menu(cart: GroceryCartAtStore):
    menu = """
    MENU
    ADD - Add Object to cart
    REMOVE - Remove Object from cart
    MODIFY - Modify Object quantity
    IDENTIFY - Output Objects' identity
    OUTPUT - Output Grocery Cart
    QUIT - Quit
    """
    while True:
        print(menu)
        selection = input(f"{cart.grocery_shoppers_name}, choose an option to edit your Grocery Cart:\n")
        if selection == 'QUIT':
            break
        elif selection == 'ADD':
            name = input(
                f"{cart.grocery_shoppers_name}, what's the description of the Object to add to the existing Grocery Cart:\n")
            price = float(input(
                f"{cart.grocery_shoppers_name}, what's the price of the {name} being added to the existing Grocery Cart:\n"))
            quantity = int(input(
                f"{cart.grocery_shoppers_name}, what's the quantity of the {name} being added to the existing Grocery Cart:\n"))
            new_Object = ObjectToProcure(name, price, quantity)
            cart.add_product(new_Object)
        elif selection == 'REMOVE':
            name = input(
                f"{cart.grocery_shoppers_name}, what's the description of the Object to remove from the existing Grocery Cart:\n")
            cart.remove_product(name)
        elif selection == 'MODIFY':
            name = input(
                f"{cart.grocery_shoppers_name}, what's the description of the Object to modify in the existing Grocery Cart:\n")
            price = float(
                input(f"{cart.grocery_shoppers_name}, what's the new price of {name} (or 0 to leave unchanged):\n"))
            quantity = int(
                input(f"{cart.grocery_shoppers_name}, what's the new quantity of {name} (or 0 to leave unchanged):\n"))
            modified_Object = ObjectToProcure(name, price, quantity)
            cart.adjust_Object(modified_Object)
        elif selection == 'IDENTIFY':
            cart.print_identity()
        elif selection == 'OUTPUT':
            cart.total_output()


def main():
    grocery_shoppers_name = input("What's the Grocery Shoppers Name:\n")
    todays_shopping_date = input("What's the Date of the Grocery Shopping [Format ex: Month Date, Year [Sept 1st, 2024]]:\n")
    print(f"Client name: {grocery_shoppers_name}")
    print(f"Today's date: {todays_shopping_date}")

    cart = GroceryCartAtStore(grocery_shoppers_name, todays_shopping_date)
    initial_product_to_cart(cart)
    print_menu(cart)


if __name__ == "__main__":
    main()
# COPY THIS LINE OF CODE - ENDING




"Screenshot 1," "Main Function Line one and two execution, Input Prompt from user”



Asking for the Grocery Shoppers Name and the format of the data when the shopping is occurring

“Screenshot 2”, “Output of the Name and Date Input from Shopper” 



“Screenshot 3”, “The ItemToProcure Function and its Cart Creation Logic”




“Screenshot 4”, “Output on the Concole of the Class ItemToProcure”


 “Screenshot 5”, “The GroceryCartAtStore Class, has the add_product, remove_product, adjust_item, get_num_items_in_cart, get_cost_of_cart, total_output, print_descriptions functions that are passed to print menu function to display ”


“Screenshot 6”, “The print_menu function with the menu, and the ‘if, elif control flow that calls the add_product function, remove_product, modify_product, print_descriptions ,and print_total function’s’ from the ShoppingCart Class”


   
“Screenshot 7”, ”After PASTA Being Added, Menu Displayed, ADD Option Selected via Input, ‘ice cream sandwich’s added, at price 2 and quantity 2, then MENU Displayed again, and IDENTIFY Selected, and CART Displayed with Item Description Function Called. The Menu Displayed again. Next REMOVE Prompt passed to the program, and ice cream sandwich’s removed”







“Screenshot 8”, ”After ice cream sandwich’s are removed, IDENTIFY is passed as an INPUT, to MENU, and the shopping cart is displayed with ice cream sandwich’s no longer part of the cart. Then MENU Displayed again, and MODIFY is Selected, and ‘PASTA’, but in the lower case is passed, and the adjustment is not made, again MODIFY is passed again, with price and quantity 7 and 111 respectively and the adjustment is accepted. MENU is displayed again.”







“Screenshot 9”, ”After the MODIFY function executed, the MENU is dispayed again,and IDENTIFY reveals that the PASTA is at QUANTITY 7, the price was modified to 111 and isn’t displayed, the MENU Displays again, and OUTPUT Selection revels the new Price of PASTA and the totat cost of the cart, then QUIT exits the program”


GITHUB LINK - 

APA citations:

W3Schools. (n.d.). Python Conditions. Retrieved August 25, 2024, from https://www.w3schools.com/python/python_conditions.asp 

Python Software Foundation. (n.d.). The Python Tutorial: More Control Flow Tools. Retrieved August 25, 2024, from https://docs.python.org/3/tutorial/controlflow.html 

W3Schools. (n.d.). Python Classes and Objects. Retrieved August 25, 2024, from https://www.w3schools.com/python/python_classes.asp 

Python Software Foundation. (n.d.). The Python Tutorial: Classes. Retrieved August 25, 2024, from https://docs.python.org/3/tutorial/classes.html 

GeeksforGeeks. (n.d.). Python Functions. Retrieved August 25, 2024, from https://www.geeksforgeeks.org/python-functions/ 

Reddit. (n.d.). Pass class as argument to another class. Retrieved August 25, 2024, from https://www.reddit.com/r/learnpython/comments/12fk1we/pass_class_as_argument_to_another_class/ 

Sikka, S. (2024, January 24). Python Type Hinting: How To Get Started and Why You Should Use It. Dagster. Retrieved August 25, 2024, from https://dagster.io/blog/python-type-hinting 


output 
/Users/asaqx645/PycharmProjects/csc500/csc500_venv/bin/python /Users/asaqx645/PycharmProjects/csc500/csc_500_prin_of_prg/MODULE8/portfolio-assignment-module8-aditya-sandhu4.py
What's the Grocery Shoppers Name:
Adi Sandhu
What's the Date of the Grocery Shopping [Format ex: Month Date, Year [Sept 1st, 2024]]:
September 7th, 2024
Customer name: Adi Sandhu
Today's date: September 7th, 2024
Whats the description of the first item:
pizza
Whats the dollar value of the pizza:
15.09
Whats the quantity of the pizza:
2

HERE IS THE TOTAL COST OF THE ITEM
pizza 2 @ $15.09 = $30.18

Total: $30.18

    MENU
    ADD - Add item to cart
    REMOVE - Remove item from cart
    MODIFY - Modify item quantity
    IDENTIFY - Output items' descriptions
    OUTPUT - Output Grocery Cart
    QUIT - Quit
    
Adi Sandhu, choose an option to edit your Grocery Cart:
ADD
Adi Sandhu, what's the description of the item to add to the existing Grocery Cart:
ice cream
Adi Sandhu, what's the price of the ice cream being added to the existing Grocery Cart:
7.99
Adi Sandhu, what's the quantity of the ice cream being added to the existing Grocery Cart:
1

    MENU
    ADD - Add item to cart
    REMOVE - Remove item from cart
    MODIFY - Modify item quantity
    IDENTIFY - Output items' descriptions
    OUTPUT - Output Grocery Cart
    QUIT - Quit
    
Adi Sandhu, choose an option to edit your Grocery Cart:
IDENTIFY
Adi Sandhu's Grocery Cart - September 7th, 2024
Item Descriptions
pizza: 15.09
ice cream: 7.99

    MENU
    ADD - Add item to cart
    REMOVE - Remove item from cart
    MODIFY - Modify item quantity
    IDENTIFY - Output items' descriptions
    OUTPUT - Output Grocery Cart
    QUIT - Quit
    
Adi Sandhu, choose an option to edit your Grocery Cart:
REMOVE
Adi Sandhu, what's the description of the item to remove from the existing Grocery Cart:
pizza

    MENU
    ADD - Add item to cart
    REMOVE - Remove item from cart
    MODIFY - Modify item quantity
    IDENTIFY - Output items' descriptions
    OUTPUT - Output Grocery Cart
    QUIT - Quit
    
Adi Sandhu, choose an option to edit your Grocery Cart:
IDENTIFY
Adi Sandhu's Grocery Cart - September 7th, 2024
Item Descriptions
ice cream: 7.99

    MENU
    ADD - Add item to cart
    REMOVE - Remove item from cart
    MODIFY - Modify item quantity
    IDENTIFY - Output items' descriptions
    OUTPUT - Output Grocery Cart
    QUIT - Quit
    
Adi Sandhu, choose an option to edit your Grocery Cart:
MODIFY
Adi Sandhu, what's the description of the item to modify in the existing Grocery Cart:
ice cream
Adi Sandhu, what's the new price of ice cream (or 0 to leave unchanged):
12.53
Adi Sandhu, what's the new quantity of ice cream (or 0 to leave unchanged):
2

    MENU
    ADD - Add item to cart
    REMOVE - Remove item from cart
    MODIFY - Modify item quantity
    IDENTIFY - Output items' descriptions
    OUTPUT - Output Grocery Cart
    QUIT - Quit
    
Adi Sandhu, choose an option to edit your Grocery Cart:
OUTPUT
Adi Sandhu's Grocery Cart - September 7th, 2024
Total Number of Items in the Grocery Cart: 2
ice cream 2 @ $12.53 = $25.06

Total Cost of the Cart: $25.06

    MENU
    ADD - Add item to cart
    REMOVE - Remove item from cart
    MODIFY - Modify item quantity
    IDENTIFY - Output items' descriptions
    OUTPUT - Output Grocery Cart
    QUIT - Quit
    
Adi Sandhu, choose an option to edit your Grocery Cart:
QUIT

Process finished with exit code 0

